version: '3.9'

services:
  inventory-cmd:
    image: 'inventory-cmd:latest'
    build:
      context: ./inventory.cmd
    ports:
      - "8080:5000"
    depends_on:
      - zookeeper
      - kafka
    environment:
      - kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
      - kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
      - spring.datasource.url=jdbc:h2:mem:cmdDb
      - spring.datasource.driver-class-name=org.h2.Driver
      - spring.datasource.username=sa
      - spring.datasource.password=
      - spring.h2.console.enabled=true
      - server.port=5000
      - spring.kafka.producer.bootstrap-servers=kafka:9092
      - spring.main.allow-circular-references=true
    networks:
      - inventorySystem

  inventory-query:
    image: 'inventory-query:latest'
    build:
      context: ./inventory.query
    ports:
      - "8081:5001"
    depends_on:
      - zookeeper
      - kafka
    environment:
      - spring.datasource.url=jdbc:h2:mem:queryDb
      - spring.datasource.driver-class-name=org.h2.Driver
      - spring.datasource.username=sa
      - spring.datasource.password=
      - spring.h2.console.enabled=true
      - server.port=5001
      - spring.kafka.consumer.group-id=stockConsumer
      - spring.kafka.consumer.auto-offset-reset=earliest
      - spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
      - spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
      - spring.kafka.consumer.properties.spring.json.trusted.packages=*
      - spring.kafka.consumer.bootstrap-servers=kafka:9092
    networks:
      - inventorySystem


  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - inventorySystem

  kafka:
    image: 'bitnami/kafka:3.6'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - inventorySystem


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  inventorySystem:
